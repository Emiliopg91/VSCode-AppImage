name: Package & release Visual Studio Code AppImage

on:
  schedule:
    - cron: "0 0 * * *"  # Se ejecuta a las 12:00 AM UTC cada día
  workflow_dispatch:     # Permite la ejecución manual del workflow  
  push:
    branches:
      - main

permissions:
  contents: write  # Permitir escritura en el repositorio (incluyendo tags)

jobs:
  generate-appimage:
    name: Generate AppImage
    runs-on: ubuntu-latest
    outputs:
      is_update: ${{ steps.generate-appimage-file.outputs.is_update }}  # Exportar IS_UPDATE como output
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install dependencies
        run: |
            sudo apt-get update
            sudo apt-get install -y jq libfuse2
            pip install --upgrade certifi
        shell: bash
        
      - name: Download latest VSCode
        run: |
          wget -O binaries.tar.gz "https://code.visualstudio.com/sha/download?build=stable&os=linux-x64"

      - name: Unpack binaries
        run: |
          tar -xzvf ./binaries.tar.gz

      - name: Get version
        id: get_version
        run: |
          version=$(cat ./VSCode-linux-x64/resources/app/package.json | jq -r .version)
          echo "version=$version" >> $GITHUB_ENV

      - name: Generate AppImage
        id: generate-appimage-file
        uses: Emiliopg91/AppImage-Creator@1.1.3
        with: 
          entrypoint: "./VSCode-linux-x64/code"
          name: "Visual Studio Code" 
          version: ${{ env.version }}
          icon: "./VSCode-linux-x64/resources/app/resources/linux/code.png"
          desktop: "./vsc.desktop"

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: generate-appimage
    if: ${{ needs.generate-appimage.outputs.is_update == 'true' }}
    steps:    
      - name: Download tar.gz, AppImage, and AppImage.zsync
        uses: actions/download-artifact@v4
        with:
          name: app-binaries
          path: .
          
      - name: Download AppImage and zsync files
        uses: actions/download-artifact@v4
        with:
          name: appimage-files
          path: .

      - name: Create GitHub Release
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: "${{ needs.generate-appimage.outputs.version }}"
          automatic_release_tag: latest
          prerelease: false
          files: |
            ./*
          repo_token: ${{ secrets.GITHUB_TOKEN }}
